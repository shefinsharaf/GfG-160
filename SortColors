//Brute force approach 
//using normal sorting or using two loops 
//better appraoch (there is only 3 variable in the array 0,1,2 so we can jzt count the variables and update the array )

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int zero = 0;
        int one = 0 ;
        int two = 0;
       for(int i = 0;i<nums.size();i++)
        {
            if(nums[i] == 0) zero++;
            else if(nums[i] == 1) one++;
            else two++;   
        }
        for(int i = 0;i< zero;i++)
            nums[i]=0;
        for(int i = zero;i<one +zero ;i++)
            nums[i] = 1;
        for(int i = one+zero ;i<nums.size();i++)
        nums[i] =2;
    }
};


Dutch National Flag Algorithm
// these is like using 3 pointers low mid and high then compare 
thre have threee rules o low-1 will be 0 and low to mid-1 will be 1 and high +1 to n will be 2 these is the logic here

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int n = nums.size();
        int low = 0;
        int mid = 0;
        int high =n-1;
        while (mid <= high)
            {
                if(nums[mid] == 0 ){
                swap(nums[low],nums[mid]);
                mid++;
                low++;
                } 
                else if(nums[mid] == 1)
                    {
                        mid++;
                    }
                    else 
                    {
                        swap(nums[mid],nums[high]);
                    high--;
                    }
                    
            }
    }
};
