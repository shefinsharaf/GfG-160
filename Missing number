// Brute force approach
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n = nums.size();
        for(int i = 0 ; i<=n ; i++)
            {
                int flag = 0;
            for(int j = 0; j<n-1 ;j++)
            {
                if(nums[j] == i )
                {
                    flag = 1;
                    break;
                }
                    
            }
            if(flag == 0)
            return i; 
            }
            return n;
    }
};

        Better approach (using hash )


class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n = nums.size();
        int hash[10000] = {0};
        for(int i = 0;i<n;i++)
            hash[nums[i]]++;
        for(int i = 0;i<n;i++)
        if(hash[i]==0)
            return i;
        return n;
    }
};

USING SUMMATION METHOD WE CAN SOLVE THESE 
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n = nums.size();
        int TotalSum,sum = 0;
        TotalSum = n*(n+1)/2;
        for(int i = 0;i<n;i++)
            sum += nums[i];
        
        return TotalSum - sum;
    }
};
