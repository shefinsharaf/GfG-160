Brute force approach

class Solution {
public:
        const int marker = INT_MIN + 5;
      void markrow(vector<vector<int>>& matrix, int i){
            for(int j = 0 ; j< matrix[0].size();j++)
            {
               if (matrix[i][j] != 0 && matrix[i][j] != marker )
                matrix[i][j] = marker;
            }
        }
      void markcolm(vector<vector<int>> &matrix,int j){
            for(int i = 0 ; i< matrix.size();i++)
            {
               if (matrix[i][j] != 0 && matrix[i][j] != marker )
                 matrix[i][j] = marker;
            }
        }
    void setZeroes(vector<vector<int>>& matrix) {
        int rows = matrix.size();
        int colm = matrix[0].size();


        for(int i = 0 ;i< rows;i++)
        {
            for(int j = 0;j<colm ; j++)
            {
                if(matrix[i][j] == 0 )
                {
                    markrow(matrix,i);
                    markcolm(matrix,j);
                }
            }
        }

        for(int i = 0 ;i< rows;i++)
        {
            for(int j = 0;j<colm ; j++)
            {
                if(matrix[i][j] == marker)
                {
                    matrix[i][j] = 0;
                }
            }
        }
    }
};

BETTER APPROACH BY USING A MARKDOWN OF ROW AND COLUMN 
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        vector<int>row(m,0);
        vector<int>colm(n,0);
        for(int i = 0;i<m;i++)
        {
            for(int j = 0;j<n;j++)
            {
                if(matrix[i][j] == 0)
                {
                    row[i] = 1;
                    colm[j] = 1;
                }
            }
        }
        for(int i = 0;i<m;i++)
        {
            for(int j = 0;j<n;j++)
            {
                if(row[i] || colm[j])
                {
                    matrix[i][j] = 0;
                }
            }
        }
        
    }
};


optimal appraoch 
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        int colo = 1;
        //vector<int>row(m,0); -> matrix[0][..]
        //vector<int>colm(n,0);matrix[..][0]
        for(int i = 0;i<m;i++)
        {
            for(int j = 0;j<n;j++)
            {
                if(matrix[i][j] == 0)
                {
                    matrix[i][0] = 0;
                    if(j != 0)
                    matrix[0][j] = 0;
                    else
                    colo = 0;
                }
            }
        }
         for(int i = 1;i<m;i++)
        {
            for(int j = 1;j<n;j++)
            {
              if(matrix[i][0] == 0 || matrix[0][j] == 0)
                matrix[i][j] = 0;    
            }
        }
        if(matrix[0][0] == 0) 
        for(int j = 0 ; j<n;j++) matrix[0][j] = 0;
        if(colo == 0)
        for(int i = 0 ; i<m;i++) matrix[i][0] = 0;
        
    }
};

